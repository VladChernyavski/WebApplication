@model WebAppChernyavskiy.ViewModels.Account.LoginViewModel

@{
    ViewData["Title"] = "Login";
}

<h1>Login</h1>


<div class="row">
    <div class="col-md-6">
        <h4>LoginViewModel</h4>
        <hr />
        <form asp-action="Login">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="RememberMe" /> @Html.DisplayNameFor(model => model.RememberMe)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
    <div class="col-md-6">
        @if (!(Model.ExternalLogins == null)) {
            <h4>LoginViewModel</h4>
            <hr />
            <form method="post" asp-action="ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl">
                <div>
                    @foreach (var provider in Model.ExternalLogins) {
                        <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name"
                                title="Login usin your @provider.DisplayName account">
                            @provider.DisplayName
                        </button>
                    }
                </div>
            </form>
        }
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
